{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","dialogMessage","ava","src","alt","activeClassName","active","dialogLink","name","Message","message","Textarea","Element","maxLength50","maxLength","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogItems","values","sendMessage","newMessage","compose","dispatch","addMessageActionCreator"],"mappings":"4NAIIA,EAAkB,SAACC,GAAD,MAAY,CAC9BC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAKC,MAAMN,OAET,cAACG,EAAD,eAAeE,KAAKC,QAFI,cAAC,IAAD,CAAUC,GAAG,eAJT,GAEXC,IAAML,WAUtC,OAFqCM,YAAQX,EAARW,CAAyBL,K,oBCjBlEM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,IAAM,qBAAqB,WAAa,4BAA4B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,cAAgB,iC,+GCe/SC,EAZI,SAACN,GAChB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACE,sBAAKC,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,eAAjC,UACE,qBAAKH,UAAWC,IAAEG,IAAKC,IAAKd,EAAMc,IAAKC,IAAI,SAC3C,cAAC,IAAD,CAASC,gBAAiBN,IAAEO,OAAQR,UAAWC,IAAEQ,WAAYjB,GAAIM,EAAjE,SACGP,EAAMmB,WCEFC,EATC,SAACpB,GAEb,OACI,8BACI,qBAAKS,UAAS,UAAKC,IAAEW,QAAP,YAAkBX,IAAEE,eAAlC,SAAoDZ,EAAMqB,a,yCCDhEC,EAAWC,YAAQ,YACnBC,EAAcC,YAAU,IAefC,cAAU,CAACC,KAAM,eAAjBD,EAdQ,SAAC1B,GACpB,OACI,uBAAM4B,SAAU5B,EAAM6B,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWT,EAAUH,KAAK,aAAaa,YAAY,qBACnDC,SAAU,CAACC,IAAUV,OAEhC,8BACI,kDCkBDW,EAxBC,SAACnC,GACf,IAAIP,EAAQO,EAAMoC,YAEdC,EAAkB5C,EAAM6C,QAAQC,KAAK,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAiBX,GAAIgC,EAAEhC,GAAIM,IAAK0B,EAAE1B,KAAvB0B,EAAEhC,OAC3EiC,EAAmBhD,EAAMiD,SAASH,KAAK,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAEnC,OAMpF,OACE,sBAAKC,UAAWC,IAAE4B,QAAlB,UACI,qBAAK7B,UAAWC,IAAEkC,YAAlB,SACKP,IAEL,sBAAK5B,UAAWC,IAAEgC,SAAlB,UACI,8BAAMD,IACN,cAAC,EAAD,CAAgBb,SAXN,SAACiB,GACnB7C,EAAM8C,YAAYD,EAAOE,sBCIdC,sBACb7C,aAdoB,SAACV,GACrB,MAAO,CACL2C,YAAa3C,EAAM2C,gBAGE,SAACa,GACxB,MAAO,CACLH,YAAY,SAACC,GACXE,EAASC,YAAwBH,SAOrCnD,IAFaoD,CAGbb","file":"static/js/5.a7b2e40b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    \r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Yns_\",\"dialogItems\":\"Dialogs_dialogItems__3U7Ao\",\"dialog\":\"Dialogs_dialog__2QnLW\",\"ava\":\"Dialogs_ava__1oxrp\",\"dialogLink\":\"Dialogs_dialogLink__38YPp\",\"active\":\"Dialogs_active__oCpCV\",\"messages\":\"Dialogs_messages__2JWsS\",\"message\":\"Dialogs_message__1Ctlk\",\"dialogMessage\":\"Dialogs_dialogMessage__1RmF8\"};","import { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n      <div className={`${s.dialog} ${s.dialogMessage}`}>\r\n        <img className={s.ava} src={props.src} alt='foto'/>\r\n        <NavLink activeClassName={s.active} className={s.dialogLink} to={path}>\r\n          {props.name}\r\n        </NavLink>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={`${s.message} ${s.dialogMessage}`}>{props.message}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import s from './Dialogs.module.css';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Element } from '../common/FormsControls/FormControls';\r\nimport { maxLength, required } from '../../utilities/validators/validators';\r\n\r\nconst Textarea = Element('textarea')\r\nconst maxLength50 = maxLength(50)\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field component={Textarea} name='newMessage' placeholder='Enter your message'\r\n                       validate={[required, maxLength50]} />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'messageForm'})(AddMessageForm)\r\n\r\n","import s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport AddMessageForm from './AddMessageForm'\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} src={d.src}/> );\r\n  let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id}/>);\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessage)\r\n  }\r\n  \r\n  return (\r\n    <div className={s.dialogs}>\r\n        <div className={s.dialogItems}>\r\n            {dialogsElements}\r\n        </div>\r\n        <div className={s.messages}>\r\n            <div>{messagesElements}</div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Dialogs;\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport {addMessageActionCreator} from '../../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage:(newMessage) => {\r\n      dispatch(addMessageActionCreator(newMessage))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}