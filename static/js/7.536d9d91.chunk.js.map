{"version":3,"sources":["components/common/FormsControls/FormControls.module.css","components/common/FormsControls/FormControls.js","utilities/validators/validators.js","components/Login/Login.jsx"],"names":["module","exports","Element","input","meta","props","hasError","error","touched","className","s","formControl","required","value","maxLength","length","Input","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","placeholder","name","component","validate","type","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,gHCC5GC,EAAU,SAACA,GAAD,OAAa,YAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCACvDC,EAAWF,EAAKG,OAAUH,EAAKI,QACrC,OACI,sBAAKC,UAAWC,IAAEC,YAAc,KAAOL,EAAWI,IAAEH,MAAQ,IAA5D,UACI,8BACI,cAAC,EAAD,2BAAaJ,GAAWE,MAE1BC,GAAY,+BAAOF,EAAKG,c,iCCTtC,oEAAO,IAAMK,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAEEC,EAAY,SAACA,GAAD,OAAe,SAACD,GACrC,GAAIA,EAAME,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,iCCLlC,+FAQME,EAAQd,YAAQ,SA2BhBe,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAzBL,SAACb,GACf,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,8BACI,cAAC,IAAD,CAAOC,YAAY,QAAQC,KAAK,QAAQC,UAAWR,EAC5CS,SAAU,CAACb,SAEtB,8BACI,cAAC,IAAD,CAAOU,YAAY,WAAWC,KAAK,WAAWC,UAAWR,EAAOU,KAAK,WAC9DD,SAAU,CAACb,SAEtB,gCACI,cAAC,IAAD,CAAOY,UAAU,QAAQD,KAAK,aAAaG,KAAK,aADpD,iBAGErB,EAAME,OACL,qBAAKE,UAAWC,IAAEiB,iBAAlB,SACEtB,EAAME,QAEX,8BACI,mDA2BDqB,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAACE,WAA1BJ,EAnBD,SAACvB,GAKX,OAAIA,EAAMyB,OAAe,cAAC,IAAD,CAAUG,GAAG,aAGlC,gCACI,uCACA,cAAChB,EAAD,CAAgBG,SATP,SAACc,GACd7B,EAAM2B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.536d9d91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__rJO7G\",\"error\":\"FormControls_error___zxky\",\"formSummaryError\":\"FormControls_formSummaryError__1BjOw\"};","import s from './FormControls.module.css'\r\n\r\nexport const Element = (Element) => ({input, meta, ...props}) => {\r\n    const hasError = meta.error &&  meta.touched\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')} >\r\n            <div>\r\n                <Element {...input} {...props} />\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","import { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { login } from \"../../redux/authReducer\"\r\nimport { required } from \"../../utilities/validators/validators\"\r\nimport { Element } from \"../common/FormsControls/FormControls\"\r\nimport s from '../common/FormsControls/FormControls.module.css'\r\n\r\nconst Input = Element('input')\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder=\"Email\" name='email' component={Input}\r\n                       validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder=\"Password\" name='password' component={Input} type='password'\r\n                       validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field component=\"input\" name='rememberMe' type=\"checkBox\"/>Remember me\r\n            </div>\r\n            { props.error\r\n            && <div className={s.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) return <Redirect to='/profile' />\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login} )(Login);"],"sourceRoot":""}