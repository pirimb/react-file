{"version":3,"sources":["components/common/FormsControls/FormControls.module.css","components/common/FormsControls/FormControls.js","hoc/withAuthRedirect.js","utilities/validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Element","input","meta","props","hasError","error","touched","className","s","formControl","Input","Textarea","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","required","value","maxLength","length","DialogItem","path","id","dialog","dialogMessage","ava","src","alt","activeClassName","active","dialogLink","name","Message","message","maxLength50","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogItems","values","sendMessage","newMessage","compose","dispatch","addMessageActionCreator"],"mappings":"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","file":"static/js/5.7ce2989c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__rJO7G\",\"error\":\"FormControls_error___zxky\",\"formSummaryError\":\"FormControls_formSummaryError__1BjOw\"};","import s from './FormControls.module.css'\r\n\r\nexport const Element = (Element) => ({input, meta, ...props}) => {\r\n    const hasError = meta.error &&  meta.touched\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')} >\r\n            <div>\r\n                <Element {...input} {...props} />\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = Element('input')\r\nexport const Textarea = Element('textarea')\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    \r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Yns_\",\"dialogItems\":\"Dialogs_dialogItems__3U7Ao\",\"dialog\":\"Dialogs_dialog__2QnLW\",\"ava\":\"Dialogs_ava__1oxrp\",\"dialogLink\":\"Dialogs_dialogLink__38YPp\",\"active\":\"Dialogs_active__oCpCV\",\"messages\":\"Dialogs_messages__2JWsS\",\"message\":\"Dialogs_message__1Ctlk\",\"dialogMessage\":\"Dialogs_dialogMessage__1RmF8\"};","import { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n      <div className={`${s.dialog} ${s.dialogMessage}`}>\r\n        <img className={s.ava} src={props.src} alt='foto'/>\r\n        <NavLink activeClassName={s.active} className={s.dialogLink} to={path}>\r\n          {props.name}\r\n        </NavLink>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={`${s.message} ${s.dialogMessage}`}>{props.message}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import s from './Dialogs.module.css';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Element } from '../common/FormsControls/FormControls';\r\nimport { maxLength, required } from '../../utilities/validators/validators';\r\n\r\nconst Textarea = Element('textarea')\r\nconst maxLength50 = maxLength(50)\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field component={Textarea} name='newMessage' placeholder='Enter your message'\r\n                       validate={[required, maxLength50]} />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'messageForm'})(AddMessageForm)\r\n\r\n","import s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport AddMessageForm from './AddMessageForm'\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} src={d.src}/> );\r\n  let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id}/>);\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessage)\r\n  }\r\n  \r\n  return (\r\n    <div className={s.dialogs}>\r\n        <div className={s.dialogItems}>\r\n            {dialogsElements}\r\n        </div>\r\n        <div className={s.messages}>\r\n            <div>{messagesElements}</div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Dialogs;\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport {addMessageActionCreator} from '../../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage:(newMessage) => {\r\n      dispatch(addMessageActionCreator(newMessage))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}